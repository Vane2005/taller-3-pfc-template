package taller

import org.scalatest.funsuite.AnyFunSuite
import org.junit.runner.RunWith
import org.scalatestplus.junit.JUnitRunner

@RunWith(classOf[JUnitRunner])
class MatrizTest extends AnyFunSuite {

  val objMatriz = new MatrizOps()

  //matrices de tamaño 2x2
  val matriz11 = Vector(Vector(1, 2), Vector(3, 4))
  val matriz12 = Vector(Vector(4, 3), Vector(2, 1))

  //matrices de tamaño 4x4
  val matriz1 = Vector(Vector(1, 2, 3,4), Vector(5, 6, 7, 8), Vector(9, 10, 11, 12), Vector(13, 14, 15, 16))
  val matriz2 = Vector(Vector(16,15,14,13), Vector(12,11,10,9), Vector(8,7,6,5), Vector(4,3,2,1))

  //matrices de tamaño 8x8
  val matriz3 = Vector(
    Vector(1, 5, 3, 2, 4, 1, 5, 3),
    Vector(2, 4, 1, 5, 3, 2, 4, 1),
    Vector(5, 3, 2, 4, 1, 5, 3, 2),
    Vector(4, 1, 5, 3, 2, 4, 1, 5),
    Vector(3, 2, 4, 1, 5, 3, 2, 4),
    Vector(1, 5, 3, 2, 4, 1, 5, 3),
    Vector(2, 4, 1, 5, 3, 2, 4, 1),
    Vector(5, 3, 2, 4, 1, 5, 3, 2)
  )
  val matriz4 = Vector(
  Vector(1, 2, 3, 4, 5, 1, 2, 3),
  Vector(3, 4, 5, 1, 2, 3, 4, 5),
  Vector(2, 3, 4, 5, 1, 2, 3, 4),
  Vector(5, 1, 2, 3, 4, 5, 1, 2),
  Vector(4, 5, 1, 2, 3, 4, 5, 1),
  Vector(1, 2, 3, 4, 5, 1, 2, 3),
  Vector(3, 4, 5, 1, 2, 3, 4, 5),
  Vector(2, 3, 4, 5, 1, 2, 3, 4)
)


  //matrices de tamaño 16x16
  val matriz5 = Vector(
    Vector(1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1),
    Vector(2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2),
    Vector(3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3),
    Vector(4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4),
    Vector(5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5),
    Vector(1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1),
    Vector(2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2),
    Vector(3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3),
    Vector(4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4),
    Vector(5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5),
    Vector(1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1),
    Vector(2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2),
    Vector(3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3),
    Vector(4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4),
    Vector(5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5),
    Vector(1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1)
  )
  val matriz6 = Vector(
    Vector(1, 5, 3, 2, 4, 1, 5, 3, 2, 4, 1, 5, 3, 2, 4, 1),
    Vector(4, 1, 5, 3, 2, 4, 1, 5, 3, 2, 4, 1, 5, 3, 2, 4),
    Vector(2, 4, 1, 5, 3, 2, 4, 1, 5, 3, 2, 4, 1, 5, 3, 2),
    Vector(3, 2, 4, 1, 5, 3, 2, 4, 1, 5, 3, 2, 4, 1, 5, 3),
    Vector(5, 3, 2, 4, 1, 5, 3, 2, 4, 1, 5, 3, 2, 4, 1, 5),
    Vector(1, 5, 3, 2, 4, 1, 5, 3, 2, 4, 1, 5, 3, 2, 4, 1),
    Vector(4, 1, 5, 3, 2, 4, 1, 5, 3, 2, 4, 1, 5, 3, 2, 4),
    Vector(2, 4, 1, 5, 3, 2, 4, 1, 5, 3, 2, 4, 1, 5, 3, 2),
    Vector(3, 2, 4, 1, 5, 3, 2, 4, 1, 5, 3, 2, 4, 1, 5, 3),
    Vector(5, 3, 2, 4, 1, 5, 3, 2, 4, 1, 5, 3, 2, 4, 1, 5),
    Vector(1, 5, 3, 2, 4, 1, 5, 3, 2, 4, 1, 5, 3, 2, 4, 1),
    Vector(4, 1, 5, 3, 2, 4, 1, 5, 3, 2, 4, 1, 5, 3, 2, 4),
    Vector(2, 4, 1, 5, 3, 2, 4, 1, 5, 3, 2, 4, 1, 5, 3, 2),
    Vector(3, 2, 4, 1, 5, 3, 2, 4, 1, 5, 3, 2, 4, 1, 5, 3),
    Vector(5, 3, 2, 4, 1, 5, 3, 2, 4, 1, 5, 3, 2, 4, 1, 5),
    Vector(1, 5, 3, 2, 4, 1, 5, 3, 2, 4, 1, 5, 3, 2, 4, 1)
  )

  //matrices diferentes de 8x8
  val matriz7 = Vector(
    Vector(1, 3, 5, 2, 4, 1, 3, 5),
    Vector(4, 2, 1, 3, 5, 4, 2, 1),
    Vector(2, 4, 1, 5, 3, 2, 4, 1),
    Vector(5, 3, 2, 4, 1, 5, 3, 2),
    Vector(1, 5, 3, 2, 4, 1, 5, 3),
    Vector(4, 1, 5, 3, 2, 4, 1, 5),
    Vector(2, 4, 1, 5, 3, 2, 4, 1),
    Vector(3, 2, 4, 1, 5, 3, 2, 4)
  )
  val matriz8 = Vector(
    Vector(1, 2, 3, 4, 5, 1, 2, 3),
    Vector(4, 5, 1, 2, 3, 4, 5, 1),
    Vector(3, 4, 5, 1, 2, 3, 4, 5),
    Vector(2, 3, 4, 5, 1, 2, 3, 4),
    Vector(5, 1, 2, 3, 4, 5, 1, 2),
    Vector(1, 2, 3, 4, 5, 1, 2, 3),
    Vector(4, 5, 1, 2, 3, 4, 5, 1),
    Vector(3, 4, 5, 1, 2, 3, 4, 5)
  )


  //Multiplicaciones con el algoritmo de Strassen
  test("Multiplicar la matriz11 por la matriz12 dará como resultado: Vector(Vector(8,5), Vector(20,13))") {
    assert(objMatriz.multStrassen(matriz11, matriz12) == Vector(Vector(8,5), Vector(20,13)))
  }

  test("Multiplicar la matriz1 por la matriz2 dará como resultado: Vector(Vector(80,70,60,50), Vector(240,214,188,162), Vector(400,358,316,274), Vector(2084,1899,1714,1529))") {
    assert(objMatriz.multStrassen(matriz1, matriz2) == Vector(Vector(80, 70, 60, 50), Vector(240, 214, 188, 162), Vector(400, 358, 316, 274), Vector(560, 502, 444, 386)))
  }

  test("Multiplicar la matriz3 por la matriz4 dará como resultado: Vector(70, 84, 88, 62, 56, 70, 84, 88), Vector(69, 66, 73, 55, 67, 69, 66, 73), Vector(60, 65, 85, 80, 85, 60, 65, 85), Vector(57, 67, 82, 97, 72, 57, 67, 82), Vector(59, 78, 77, 81, 65, 59, 78, 77), Vector(70, 84, 88, 62, 56, 70, 84, 88), Vector(69, 66, 73, 55, 67, 69, 66, 73), Vector(60, 65, 85, 80, 85, 60, 65, 85))") {
    assert(objMatriz.multStrassen(matriz3, matriz4) == Vector(
      Vector(70, 84, 88, 62, 56, 70, 84, 88), Vector(69, 66, 73, 55, 67, 69, 66, 73), Vector(60, 65, 85, 80, 85, 60, 65, 85), Vector(57, 67, 82, 97, 72, 57, 67, 82), Vector(59, 78, 77, 81, 65, 59, 78, 77), Vector(70, 84, 88, 62, 56, 70, 84, 88), Vector(69, 66, 73, 55, 67, 69, 66, 73), Vector(60, 65, 85, 80, 85, 60, 65, 85)
    ))
  }

  test("Multiplicar la matriz5 por la matriz6 dará como resultado: Vector(Vector(157, 131, 129, 143, 130, 157, 131, 129, 143, 130, 157, 131, 129, 143, 130, 157), Vector(128, 136, 147, 130, 164, 128, 136, 147, 130, 164, 128, 136, 147, 130, 164, 128), Vector(129, 156, 135, 162, 138, 129, 156, 135, 162, 138, 129, 156, 135, 162, 138, 129), Vector(145, 146, 168, 134, 142, 145, 146, 168, 134, 142, 145, 146, 168, 134, 142, 145), Vector(131, 181, 141, 136, 161, 131, 181, 141, 136, 161, 131, 181, 141, 136, 161, 131), Vector(157, 131, 129, 143, 130, 157, 131, 129, 143, 130, 157, 131, 129, 143, 130, 157), Vector(128, 136, 147, 130, 164, 128, 136, 147, 130, 164, 128, 136, 147, 130, 164, 128), Vector(129, 156, 135, 162, 138, 129, 156, 135, 162, 138, 129, 156, 135, 162, 138, 129), Vector(145, 146, 168, 134, 142, 145, 146, 168, 134, 142, 145, 146, 168, 134, 142, 145), Vector(131, 181, 141, 136, 161, 131, 181, 141, 136, 161, 131, 181, 141, 136, 161, 131), Vector(157, 131, 129, 143, 130, 157, 131, 129, 143, 130, 157, 131, 129, 143, 130, 157), Vector(128, 136, 147, 130, 164, 128, 136, 147, 130, 164, 128, 136, 147, 130, 164, 128), Vector(129, 156, 135, 162, 138, 129, 156, 135, 162, 138, 129, 156, 135, 162, 138, 129), Vector(145, 146, 168, 134, 142, 145, 146, 168, 134, 142, 145, 146, 168, 134, 142, 145), Vector(131, 181, 141, 136, 161, 131, 181, 141, 136, 161, 131, 181, 141, 136, 161, 131), Vector(157, 131, 129, 143, 130, 157, 131, 129, 143, 130, 157, 131, 129, 143, 130, 157))") {
    assert(objMatriz.multStrassen(matriz5, matriz6) == Vector(Vector(157, 131, 129, 143, 130, 157, 131, 129, 143, 130, 157, 131, 129, 143, 130, 157), Vector(128, 136, 147, 130, 164, 128, 136, 147, 130, 164, 128, 136, 147, 130, 164, 128), Vector(129, 156, 135, 162, 138, 129, 156, 135, 162, 138, 129, 156, 135, 162, 138, 129), Vector(145, 146, 168, 134, 142, 145, 146, 168, 134, 142, 145, 146, 168, 134, 142, 145), Vector(131, 181, 141, 136, 161, 131, 181, 141, 136, 161, 131, 181, 141, 136, 161, 131), Vector(157, 131, 129, 143, 130, 157, 131, 129, 143, 130, 157, 131, 129, 143, 130, 157), Vector(128, 136, 147, 130, 164, 128, 136, 147, 130, 164, 128, 136, 147, 130, 164, 128), Vector(129, 156, 135, 162, 138, 129, 156, 135, 162, 138, 129, 156, 135, 162, 138, 129), Vector(145, 146, 168, 134, 142, 145, 146, 168, 134, 142, 145, 146, 168, 134, 142, 145), Vector(131, 181, 141, 136, 161, 131, 181, 141, 136, 161, 131, 181, 141, 136, 161, 131), Vector(157, 131, 129, 143, 130, 157, 131, 129, 143, 130, 157, 131, 129, 143, 130, 157), Vector(128, 136, 147, 130, 164, 128, 136, 147, 130, 164, 128, 136, 147, 130, 164, 128), Vector(129, 156, 135, 162, 138, 129, 156, 135, 162, 138, 129, 156, 135, 162, 138, 129), Vector(145, 146, 168, 134, 142, 145, 146, 168, 134, 142, 145, 146, 168, 134, 142, 145), Vector(131, 181, 141, 136, 161, 131, 181, 141, 136, 161, 131, 181, 141, 136, 161, 131), Vector(157, 131, 129, 143, 130, 157, 131, 129, 143, 130, 157, 131, 129, 143, 130, 157))
      
    )
  }

  test("Multiplicar la matriz7 por la matriz8 dará como resultado: Vector(Vector(80, 84, 78, 52, 66, 80, 84, 78), Vector(61, 58, 60, 72, 79, 61, 58, 60), Vector(67, 74, 56, 68, 65, 67, 74, 56), Vector(59, 79, 74, 79, 84, 59, 79, 74), Vector(84, 88, 62, 56, 70, 84, 88, 62), Vector(62, 77, 92, 67, 77, 62, 77, 92), Vector(67, 74, 56, 68, 65, 67, 74, 56), Vector(73, 72, 76, 60, 79, 73, 72, 76)) ") {
    assert(objMatriz.multStrassen(matriz7, matriz8) == Vector(Vector(80, 84, 78, 52, 66, 80, 84, 78), Vector(61, 58, 60, 72, 79, 61, 58, 60), Vector(67, 74, 56, 68, 65, 67, 74, 56), Vector(59, 79, 74, 79, 84, 59, 79, 74), Vector(84, 88, 62, 56, 70, 84, 88, 62), Vector(62, 77, 92, 67, 77, 62, 77, 92), Vector(67, 74, 56, 68, 65, 67, 74, 56), Vector(73, 72, 76, 60, 79, 73, 72, 76)) 
      
    )
  }

  //Multiplicaciones con el algoritmo de Strassen Paralelizado
  test("Multiplicar la matriz11 por la matriz12 dará como resultado: Vector(Vector(8,5), Vector(20,13))") {
    assert(objMatriz.multStrassenPar(matriz11, matriz12) == Vector(Vector(8,5), Vector(20,13)))
  }

  test("Multiplicar la matriz1 por la matriz2 dará como resultado: Vector(Vector(80,70,60,50), Vector(240,214,188,162), Vector(400,358,316,274), Vector(2084,1899,1714,1529))") {
    assert(objMatriz.multStrassenPar(matriz1, matriz2) == Vector(Vector(80, 70, 60, 50), Vector(240, 214, 188, 162), Vector(400, 358, 316, 274), Vector(560, 502, 444, 386)))
  }

  test("Multiplicar la matriz3 por la matriz4 dará como resultado: Vector(70, 84, 88, 62, 56, 70, 84, 88), Vector(69, 66, 73, 55, 67, 69, 66, 73), Vector(60, 65, 85, 80, 85, 60, 65, 85), Vector(57, 67, 82, 97, 72, 57, 67, 82), Vector(59, 78, 77, 81, 65, 59, 78, 77), Vector(70, 84, 88, 62, 56, 70, 84, 88), Vector(69, 66, 73, 55, 67, 69, 66, 73), Vector(60, 65, 85, 80, 85, 60, 65, 85))") {
    assert(objMatriz.multStrassenPar(matriz3, matriz4) == Vector(
      Vector(70, 84, 88, 62, 56, 70, 84, 88), Vector(69, 66, 73, 55, 67, 69, 66, 73), Vector(60, 65, 85, 80, 85, 60, 65, 85), Vector(57, 67, 82, 97, 72, 57, 67, 82), Vector(59, 78, 77, 81, 65, 59, 78, 77), Vector(70, 84, 88, 62, 56, 70, 84, 88), Vector(69, 66, 73, 55, 67, 69, 66, 73), Vector(60, 65, 85, 80, 85, 60, 65, 85)
    ))
  }

  test("Multiplicar la matriz5 por la matriz6 dará como resultado: Vector(Vector(157, 131, 129, 143, 130, 157, 131, 129, 143, 130, 157, 131, 129, 143, 130, 157), Vector(128, 136, 147, 130, 164, 128, 136, 147, 130, 164, 128, 136, 147, 130, 164, 128), Vector(129, 156, 135, 162, 138, 129, 156, 135, 162, 138, 129, 156, 135, 162, 138, 129), Vector(145, 146, 168, 134, 142, 145, 146, 168, 134, 142, 145, 146, 168, 134, 142, 145), Vector(131, 181, 141, 136, 161, 131, 181, 141, 136, 161, 131, 181, 141, 136, 161, 131), Vector(157, 131, 129, 143, 130, 157, 131, 129, 143, 130, 157, 131, 129, 143, 130, 157), Vector(128, 136, 147, 130, 164, 128, 136, 147, 130, 164, 128, 136, 147, 130, 164, 128), Vector(129, 156, 135, 162, 138, 129, 156, 135, 162, 138, 129, 156, 135, 162, 138, 129), Vector(145, 146, 168, 134, 142, 145, 146, 168, 134, 142, 145, 146, 168, 134, 142, 145), Vector(131, 181, 141, 136, 161, 131, 181, 141, 136, 161, 131, 181, 141, 136, 161, 131), Vector(157, 131, 129, 143, 130, 157, 131, 129, 143, 130, 157, 131, 129, 143, 130, 157), Vector(128, 136, 147, 130, 164, 128, 136, 147, 130, 164, 128, 136, 147, 130, 164, 128), Vector(129, 156, 135, 162, 138, 129, 156, 135, 162, 138, 129, 156, 135, 162, 138, 129), Vector(145, 146, 168, 134, 142, 145, 146, 168, 134, 142, 145, 146, 168, 134, 142, 145), Vector(131, 181, 141, 136, 161, 131, 181, 141, 136, 161, 131, 181, 141, 136, 161, 131), Vector(157, 131, 129, 143, 130, 157, 131, 129, 143, 130, 157, 131, 129, 143, 130, 157))") {
    assert(objMatriz.multStrassenPar(matriz5, matriz6) == Vector(Vector(157, 131, 129, 143, 130, 157, 131, 129, 143, 130, 157, 131, 129, 143, 130, 157), Vector(128, 136, 147, 130, 164, 128, 136, 147, 130, 164, 128, 136, 147, 130, 164, 128), Vector(129, 156, 135, 162, 138, 129, 156, 135, 162, 138, 129, 156, 135, 162, 138, 129), Vector(145, 146, 168, 134, 142, 145, 146, 168, 134, 142, 145, 146, 168, 134, 142, 145), Vector(131, 181, 141, 136, 161, 131, 181, 141, 136, 161, 131, 181, 141, 136, 161, 131), Vector(157, 131, 129, 143, 130, 157, 131, 129, 143, 130, 157, 131, 129, 143, 130, 157), Vector(128, 136, 147, 130, 164, 128, 136, 147, 130, 164, 128, 136, 147, 130, 164, 128), Vector(129, 156, 135, 162, 138, 129, 156, 135, 162, 138, 129, 156, 135, 162, 138, 129), Vector(145, 146, 168, 134, 142, 145, 146, 168, 134, 142, 145, 146, 168, 134, 142, 145), Vector(131, 181, 141, 136, 161, 131, 181, 141, 136, 161, 131, 181, 141, 136, 161, 131), Vector(157, 131, 129, 143, 130, 157, 131, 129, 143, 130, 157, 131, 129, 143, 130, 157), Vector(128, 136, 147, 130, 164, 128, 136, 147, 130, 164, 128, 136, 147, 130, 164, 128), Vector(129, 156, 135, 162, 138, 129, 156, 135, 162, 138, 129, 156, 135, 162, 138, 129), Vector(145, 146, 168, 134, 142, 145, 146, 168, 134, 142, 145, 146, 168, 134, 142, 145), Vector(131, 181, 141, 136, 161, 131, 181, 141, 136, 161, 131, 181, 141, 136, 161, 131), Vector(157, 131, 129, 143, 130, 157, 131, 129, 143, 130, 157, 131, 129, 143, 130, 157))
      
    )
  }

  test("Multiplicar la matriz7 por la matriz8 dará como resultado: Vector(Vector(80, 84, 78, 52, 66, 80, 84, 78), Vector(61, 58, 60, 72, 79, 61, 58, 60), Vector(67, 74, 56, 68, 65, 67, 74, 56), Vector(59, 79, 74, 79, 84, 59, 79, 74), Vector(84, 88, 62, 56, 70, 84, 88, 62), Vector(62, 77, 92, 67, 77, 62, 77, 92), Vector(67, 74, 56, 68, 65, 67, 74, 56), Vector(73, 72, 76, 60, 79, 73, 72, 76)) ") {
    assert(objMatriz.multStrassenPar(matriz7, matriz8) == Vector(Vector(80, 84, 78, 52, 66, 80, 84, 78), Vector(61, 58, 60, 72, 79, 61, 58, 60), Vector(67, 74, 56, 68, 65, 67, 74, 56), Vector(59, 79, 74, 79, 84, 59, 79, 74), Vector(84, 88, 62, 56, 70, 84, 88, 62), Vector(62, 77, 92, 67, 77, 62, 77, 92), Vector(67, 74, 56, 68, 65, 67, 74, 56), Vector(73, 72, 76, 60, 79, 73, 72, 76)) 
      
    )
  }  
}
